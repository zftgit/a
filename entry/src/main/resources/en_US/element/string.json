{
  "string": [
    {
      "name": "module_desc",
      "value": "module description"
    },
    {
      "name": "EntryAbility_desc",
      "value": "description"
    },
    {
      "name": "EntryAbility_label",
      "value": "CardInfoRefresh"
    },
    {
      "name": "EntryFormAbility_desc",
      "value": "form_description"
    },
    {
      "name": "EntryFormAbility_label",
      "value": "form_label"
    },
    {
      "name": "widget_desc",
      "value": "Example of recommended content list."
    },
    {
      "name": "widget_display_name",
      "value": "Card Example One"
    },
    {
      "name": "card_list_title",
      "value": "Card info refresh"
    },
    {
      "name": "card_list_content",
      "value": "Introduction"
    },
    {
      "name": "router",
      "value": "router event"
    },
    {
      "name": "call",
      "value": "call event"
    },
    {
      "name": "message",
      "value": "message event"
    },
    {
      "name": "title1",
      "value": "The advantages of ArkTS cards."
    },
    {
      "name": "content1",
      "value": "Unified development paradigm to enhance development experience and efficiency. Enhanced the card's abilities, such as animation and custom drawing, making it more versatile."
    },
    {
      "name": "title2",
      "value": "Constraints on ArkTS cards."
    },
    {
      "name": "content2",
      "value": "When importing modules, only modules with the identifier 'supported for use in ArkTS cards' are supported. Importing shared packages is not supported. Not supported for development using native languages."
    },
    {
      "name": "title3",
      "value": "Card expansion module."
    },
    {
      "name": "content3",
      "value": "FormExtendeAbility: A card extension module that provides lifecycle callbacks for card creation, destruction, and refresh."
    },
    {
      "name": "title4",
      "value": "Card configuration."
    },
    {
      "name": "content4",
      "value": "In the module. json 5 configuration file, configure the FormExtendeAbilities related information under the ExtendenAbility tag."
    },
    {
      "name": "title5",
      "value": "Create an ArkTS card."
    },
    {
      "name": "content5",
      "value": "There are currently two ways to create a card: when creating a project, select Application, which does not include a card by default. You can right-click to create a new card after creating the project. Alternatively, you can choose Atomic Service or right-click to create a new card after creating the project."
    },
    {
      "name": "title6",
      "value": "Configure the configuration file of the card."
    },
    {
      "name": "content6",
      "value": "The configuration files related to cards mainly include two parts: the configuration of FormExtendeAbility and the configuration of cards."
    },
    {
      "name": "title7",
      "value": "Card lifecycle management."
    },
    {
      "name": "content7",
      "value": "To create an ArkTS card, the FormExtendeAbility lifecycle interface needs to be implemented."
    },
    {
      "name": "title8",
      "value": "Develop card page."
    },
    {
      "name": "content8",
      "value": "Developers can use declarative paradigms to develop ArkTS card pages. The card page can also be automatically generated by DevEco Studio templates, and developers can adjust it according to their own business scenarios."
    },
    {
      "name": "title9",
      "value": "Card usage dynamic effect capability."
    },
    {
      "name": "content9",
      "value": "ArkTS cards have opened up the ability to use animation effects, supporting explicit animation, attribute animation, and component transition capabilities."
    },
    {
      "name": "title10",
      "value": "Custom drawing ability for card usage."
    },
    {
      "name": "content10",
      "value": "ArkTS cards have opened up the ability for custom drawing. On the card, a canvas can be created using the Canvas component, and then custom graphics can be drawn on the canvas using the CanvasRendering Context2D object."
    },
    {
      "name": "title11",
      "value": "Card event capability."
    },
    {
      "name": "content11",
      "value": "For dynamic cards, ArkTS cards provide a postCardAction interface for interaction between card internal and provider applications. Currently, it supports three types of events: router, message, and call, which can only be called within the card."
    },
    {
      "name": "title12",
      "value": "Card Data Interaction Instructions."
    },
    {
      "name": "content12",
      "value": "The ArkTS card framework provides the updateForm and requestForm interfaces to actively trigger the page refresh of the card, and confirms the card data that needs to be refreshed through LocalStoreProp."
    },
    {
      "name": "reason_keep_background_running",
      "value": "Allow applications to run in the background in card update scenarios."
    },
    {
      "name": "widget1_desc",
      "value": "Recommended content examples."
    },
    {
      "name": "widget1_display_name",
      "value": "Card Example Two"
    }
  ]
}